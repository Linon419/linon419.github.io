<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Java - tag - Yang&#39;s Blog</title>
        <link>https://yang419.com/tags/java/</link>
        <description>Java - tag - Yang&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>lzlyvip@gmail.com (Yang)</managingEditor>
            <webMaster>lzlyvip@gmail.com (Yang)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 10 Apr 2020 14:13:06 &#43;0000</lastBuildDate><atom:link href="https://yang419.com/tags/java/" rel="self" type="application/rss+xml" /><item>
    <title>Java反射简单概念</title>
    <link>https://yang419.com/java%E5%8F%8D%E5%B0%84%E7%AE%80%E5%8D%95%E6%A6%82%E5%BF%B5/</link>
    <pubDate>Fri, 10 Apr 2020 14:13:06 &#43;0000</pubDate>
    <author></author>
    <guid>https://yang419.com/java%E5%8F%8D%E5%B0%84%E7%AE%80%E5%8D%95%E6%A6%82%E5%BF%B5/</guid>
    <description><![CDATA[反射，就是通过Class文件对象，获取该文件中的成员变量，构造方法，成员方法 要想这样使用，先要得到Class文件对象 Class类： ​ 成员变量]]></description>
</item><item>
    <title>Lambda</title>
    <link>https://yang419.com/lambda/</link>
    <pubDate>Tue, 21 Jan 2020 19:10:37 &#43;0000</pubDate>
    <author></author>
    <guid>https://yang419.com/lambda/</guid>
    <description><![CDATA[Hello Lambda 普通方法 使用一个普通方法，在for循环遍历中进行条件判断筛选出满足条件的数据 hp&gt;100 &amp;&amp; damage&lt;50 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27]]></description>
</item><item>
    <title>线程</title>
    <link>https://yang419.com/xian-cheng/</link>
    <pubDate>Mon, 20 Jan 2020 23:11:22 &#43;0000</pubDate>
    <author></author>
    <guid>https://yang419.com/xian-cheng/</guid>
    <description><![CDATA[基本概念 多线程是Java语言的重要特性，大量应用于网络编程、服务器端程序的开发，最常见的UI界面底层原理、操作系统底层原理都大量使用了多线程]]></description>
</item><item>
    <title>IO流</title>
    <link>https://yang419.com/io-liu/</link>
    <pubDate>Sun, 19 Jan 2020 23:13:41 &#43;0000</pubDate>
    <author></author>
    <guid>https://yang419.com/io-liu/</guid>
    <description><![CDATA[基本概念和IO入门 对于任何程序设计语言而言，输入输出(Input/Output)系统都是非常核心的功能。程序运行需要数据，数据的获取往往需要]]></description>
</item><item>
    <title>容器</title>
    <link>https://yang419.com/rong-qi/</link>
    <pubDate>Sun, 19 Jan 2020 16:44:01 &#43;0000</pubDate>
    <author></author>
    <guid>https://yang419.com/rong-qi/</guid>
    <description><![CDATA[容器，也叫集合(Collection)。 泛型 泛型是JDK1.5以后增加的，它可以帮助我们建立类型安全的集合。在使用了泛型的集合中，遍历时不必]]></description>
</item><item>
    <title>各种常用类</title>
    <link>https://yang419.com/ge-chong-chang-yong-lei/</link>
    <pubDate>Thu, 09 Jan 2020 17:35:18 &#43;0000</pubDate>
    <author></author>
    <guid>https://yang419.com/ge-chong-chang-yong-lei/</guid>
    <description><![CDATA[包装类 包装类的基本知识 Java是面向对象的语言，但并不是“纯面向对象”的，因为我们经常用到的基本数据类型就不是对象。但是我们在实际应用中经常]]></description>
</item><item>
    <title>内部类</title>
    <link>https://yang419.com/nei-bu-lei/</link>
    <pubDate>Mon, 06 Jan 2020 20:13:41 &#43;0000</pubDate>
    <author></author>
    <guid>https://yang419.com/nei-bu-lei/</guid>
    <description><![CDATA[如果一个事物包含另一个事物，那么这就是一个类内部包含另一个类 例如：人体和心脏，汽车和发动机 分类 成员内部类 局部内部类（包含匿名内部类） 成员内部]]></description>
</item><item>
    <title>多态</title>
    <link>https://yang419.com/duo-tai/</link>
    <pubDate>Sun, 05 Jan 2020 17:42:50 &#43;0000</pubDate>
    <author></author>
    <guid>https://yang419.com/duo-tai/</guid>
    <description><![CDATA[继承或接口是多态的前提 格式 代码中体现多态性，其实就是一句话，父类引用指向子类对象 格式： 父类名称 对象名 = new 子类名称(); 接口名称 对象名 = new 实现]]></description>
</item><item>
    <title>接口</title>
    <link>https://yang419.com/jie-kou/</link>
    <pubDate>Sun, 05 Jan 2020 12:37:38 &#43;0000</pubDate>
    <author></author>
    <guid>https://yang419.com/jie-kou/</guid>
    <description><![CDATA[接口是多个类的公共规范。 接口是一种引用类型，最重要的内容就是其中的抽象方法。 接口定义 接口是多个类的公共规范。 接口是一种引用类型，最重要的内容]]></description>
</item><item>
    <title>抽象方法，抽象类</title>
    <link>https://yang419.com/chou-xiang-fang-fa/</link>
    <pubDate>Sun, 05 Jan 2020 00:13:06 &#43;0000</pubDate>
    <author></author>
    <guid>https://yang419.com/chou-xiang-fang-fa/</guid>
    <description><![CDATA[如果父类当中不确定如何进行{}方法体实现，那么这应该是一个抽象方法 概述 格式 抽象方法就是加上abstract 关键字，然后去掉大括号，直接；结束]]></description>
</item></channel>
</rss>
